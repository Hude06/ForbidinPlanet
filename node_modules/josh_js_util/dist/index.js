class ConsoleLogger {
    constructor(prefix) {
        this.prefix = prefix;
    }
    error(...args) {
        console.error(`${this.prefix}:ERROR`, ...args);
    }
    info(...args) {
        console.info(`${this.prefix}:INFO`, ...args);
    }
    warn(...args) {
        console.warn(`${this.prefix}:WARN`, ...args);
    }
    assert(cond, msg) {
        if (!cond)
            throw new Error(`${this.prefix}:ASSERT FAILED ${msg}`);
        console.log(`${this.prefix}:ASSERT`, msg);
    }
}
export function make_logger(prefix) {
    return new ConsoleLogger(prefix ? prefix : "");
}
export function sleep(sec) {
    return new Promise((res, rej) => {
        setTimeout(() => res(), Math.floor(sec * 1000));
    });
}
export function toRadians(param) {
    return Math.PI * 2 / 360 * param;
}
export function pick(arr) {
    let n = Math.floor(Math.random() * arr.length);
    return arr[n];
}
export * from "./math.js";
export * from "./jarray.js";
export * from "./arraygrid.js";
//# sourceMappingURL=index.js.map